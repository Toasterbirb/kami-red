# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Prepare version to use commit format
      run: ./scripts/preHook.sh
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Send webhook confirmation
      env:
        WEBHOOK: ${{ secrets.WEBHOOK }}
      run: ./scripts/hook.sh
    - name: Get version
      id: get_version
      env: 
        COMMIT_TRIM: "$(git log --format=%h -1)"
      run: echo "::set-output name=version::$(echo $COMMIT_TRIM)"
    - name: Create a Release
      id: create_release
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      uses: actions/create-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: v${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: true